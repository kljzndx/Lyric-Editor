<Page
    x:Class="SimpleLyricsEditor.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:model="using:SimpleLyricsEditor.DAL"
    xmlns:ctol="using:SimpleLyricsEditor.Control"
    xmlns:pctol="using:HappyStudio.UwpToolsLibrary.Control"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Loaded="MainPage_Loaded">

    <Page.Resources>
        <Style x:Key="FloatingAction_ButtonStyle" TargetType="ButtonBase">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Background" Value="{ThemeResource SystemControlBackgroundAccentBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid x:Name="Root_Grid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Root_Grid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="0.3" Duration="0" Storyboard.TargetName="White_Ellipse" Storyboard.TargetProperty="Opacity"/>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Root_Grid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="0.3" Duration="0" Storyboard.TargetName="Black_Ellipse" Storyboard.TargetProperty="Opacity"/>
                                            <PointerDownThemeAnimation Storyboard.TargetName="Root_Grid"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}"/>
                            <Ellipse x:Name="Black_Ellipse" Fill="Black" Opacity="0"/>
                            <Ellipse x:Name="White_Ellipse" Fill="White" Opacity="0"/>

                            <ContentPresenter Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Name="ButtonsInMultilineEditMode_Expand_Storyboard">
            <DoubleAnimation From="-90" To="0" Duration="0:0:0.2" Storyboard.TargetName="ButtonsInMultilineEditMode_Projection" Storyboard.TargetProperty="RotationY"/>
            <DoubleAnimation From="0" To="1" Duration="0:0:0.2" Storyboard.TargetName="ButtonsInMultilineEditMode_StackPanel" Storyboard.TargetProperty="Opacity"/>
        </Storyboard>
        <Storyboard x:Name="ButtonsInMultilineEditMode_Fold_Storyboard" Completed="ButtonsInMultilineEditMode_Fold_Storyboard_Completed">
            <DoubleAnimation From="0" To="-90" Duration="0:0:0.2" Storyboard.TargetName="ButtonsInMultilineEditMode_Projection" Storyboard.TargetProperty="RotationY"/>
            <DoubleAnimation From="1" To="0" Duration="0:0:0.2" Storyboard.TargetName="ButtonsInMultilineEditMode_StackPanel" Storyboard.TargetProperty="Opacity"/>
        </Storyboard>
    </Page.Resources>

    <Page.DataContext>
        <Binding Source="{StaticResource Locator}" Path="Main"/>
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- 用来接收焦点的透明 Button -->
        <Button Width="1" Height="1" Padding="0" TabIndex="0" HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <Grid Background="{ThemeResource AppBarBackgroundThemeBrush}">
            <pctol:FrostedGlassBackground GlassBackgroundBrush="{ThemeResource AppBarBackgroundThemeBrush}" GlassOpacity="{x:Bind _settings.FrostedGlassOpacity, Mode=OneWay}" Visibility="{x:Bind _settings.IsFrostedGlassEffectDisplay, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"/>
            <ctol:AudioPlayer x:Name="Player" Playing="Player_Playing" Paused="Player_Paused" SourceChanged="Player_SourceChanged" PositionChanged="Player_PositionChanged"/>
        </Grid>
        <Grid Grid.Row="1" Grid.RowSpan="3">
            <pctol:FrostedGlassBackground GlassBackgroundBrush="{ThemeResource ApplicationPageBackgroundThemeBrush}" GlassOpacity="{x:Bind _settings.FrostedGlassOpacity, Mode=OneWay}" Visibility="{x:Bind _settings.IsFrostedGlassEffectDisplay, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"/>
            <ctol:BlurBackgroundImage x:Name="BlurBackground" BlurDegree="{x:Bind _settings.BackgroundBlurDegree, Mode=OneWay}" ImageOpacity="{x:Bind _settings.BackgroundImageOpacity, Mode=OneWay}" MaskOpacity="{x:Bind _settings.BackgroundDominantMaskOpacity, Mode=OneWay}" Visibility="{x:Bind _settings.IsDisplayBackground, Mode=OneWay, Converter={StaticResource BoolToVisibility}}"/>
        </Grid>

        <Grid x:Name="LyricsOperations_Grid" Grid.Row="1" Background="Transparent"  Visibility="{x:Bind PreviewMode_ToggleButton.IsChecked, Mode=OneWay, Converter={StaticResource BoolToVisibility_Reverse}}" Tapped="LyricsOperations_Grid_Tapped">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ComboBox x:Name="InputSubmitOperations_ComboBox" VerticalAlignment="Top" BorderThickness="2,2,1,2" SelectedIndex="0" SelectionChanged="LyricsOperations_ComboBox_SelectionChanged">
                    <ComboBoxItem x:Name="AddLyrics_ComboBoxItem" x:Uid="/LyricsEdit/AddLyrics_ComboBoxItem" Content="Add Lyrics"/>
                    <ComboBoxItem x:Name="ModifyLyrics_ComboBoxItem" x:Uid="/LyricsEdit/ModifyLyrics_ComboBoxItem" Content="Modify Lyrics"/>
                </ComboBox>
                <TextBox x:Name="LyricsContent_TextBox" x:Uid="/LyricsEdit/LyricsContent_TextBox" Grid.Column="1" VerticalAlignment="Top" MaxHeight="100" BorderThickness="1,2,2,2" TextWrapping="Wrap" GotFocus="LyricsContent_TextBox_GotFocus" LostFocus="LyricsContent_TextBox_LostFocus" KeyDown="LyricsContent_TextBox_KeyDown"/>
                <Button x:Name="Submit_Button" x:Uid="/LyricsEdit/Submit_Button" Grid.Column="2" Content="&#xE0E7;" VerticalAlignment="Top" Style="{StaticResource ControllerButtonStyle}" Padding="4" Margin="0,0,5,0" Click="Submit_Button_Click"/>
            </Grid>

            <Grid Grid.Row="1" Margin="0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="MultilineEditMode_ToggleButton" x:Uid="/Tools/MultilineEditMode_ToggleButton" Content="&#xE133;" IsChecked="{x:Bind _settings.MultilineEditModeEnabled, Mode=TwoWay, Converter={StaticResource BoolNullableToBool}}" Style="{StaticResource ControllerButtonStyle}" Checked="MultilineEditMode_ToggleButton_Checked" Unchecked="MultilineEditMode_ToggleButton_Unchecked"/>

                    <StackPanel x:Name="ButtonsInMultilineEditMode_StackPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                        <StackPanel.Projection>
                            <PlaneProjection x:Name="ButtonsInMultilineEditMode_Projection" CenterOfRotationX="0"/>
                        </StackPanel.Projection>

                        <Button x:Name="SelectTools_Button" x:Uid="/Tools/SelectTools_Button" Style="{StaticResource ControllerButtonStyle}" IsEnabled="{x:Bind _viewModel.IsLyricsItemAny, Mode=OneWay}">
                            <Button.Content>
                                <Path Width="20" Height="20" Stroke="{ThemeResource SystemControlBackgroundBaseHighBrush}" StrokeThickness="1.6">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <RectangleGeometry Rect="4,1,12,4"/>
                                            <RectangleGeometry Rect="0,5,20,14"/>
                                            <LineGeometry StartPoint="5,12" EndPoint="8,16"/>
                                            <LineGeometry StartPoint="8,16" EndPoint="15,8"/>
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Button.Content>

                            <Button.Flyout>
                                <MenuFlyout>
                                    <MenuFlyoutItem x:Name="Select_Reverse_MenuFlyoutItem" x:Uid="/Tools/Select_Reverse_MenuFlyoutItem" Click="Select_Reverse_MenuFlyoutItem_Click"/>
                                    <MenuFlyoutItem x:Name="Select_BeforeItem_MenuFlyoutItem" x:Uid="/Tools/Select_BeforeItem_MenuFlyoutItem" Click="Select_BeforeItem_MenuFlyoutItem_Click"/>
                                    <MenuFlyoutItem x:Name="Select_AfterItem_MenuFlyoutItem" x:Uid="/Tools/Select_AfterItem_MenuFlyoutItem" Click="Select_AfterItem_MenuFlyoutItem_Click"/>
                                    <MenuFlyoutItem x:Name="Select_Paragraph_MenuFlyoutItem" x:Uid="/Tools/Select_Paragraph_MenuFlyoutItem" Click="Select_Paragraph_MenuFlyoutItem_Click"/>
                                </MenuFlyout>
                            </Button.Flyout>
                        </Button>

                        <Button x:Name="CopyLyrics_Button" x:Uid="/LyricsEdit/CopyLyrics_Button" Content="&#xE16F;" Style="{StaticResource ControllerButtonStyle}" Click="CopyLyrics_Button_Click"/>
                    </StackPanel>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="10,0">
                    <Button x:Name="LyricsFileInfo_Button" x:Uid="/Tools/LyricsFileInfo_Button" Content="&#xE1A1;" Style="{StaticResource ControllerButtonStyle}" Click="LyricsFileInfo_Button_Click"/>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <Button x:Name="Undo_Button" x:Uid="/LyricsEdit/Undo_Button" IsEnabled="{x:Bind _viewModel.CanUndo, Mode=OneWay}" Style="{StaticResource ControllerButtonStyle}" Click="Undo_Button_Click">
                        <Button.Content>
                            <SymbolIcon Width="20" Height="20" Symbol="Undo"/>
                        </Button.Content>
                    </Button>
                    <Button x:Name="Redo_Button" x:Uid="/LyricsEdit/Redo_Button" IsEnabled="{x:Bind _viewModel.CanRedo, Mode=OneWay}" Style="{StaticResource ControllerButtonStyle}" Click="Redo_Button_Click">
                        <Button.Content>
                            <SymbolIcon Width="20" Height="20" Symbol="Redo"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
            
        </Grid>

        <Grid Grid.Row="2">
            <Grid x:Name="LyricsList_Grid" Visibility="{x:Bind PreviewMode_ToggleButton.IsChecked, Mode=OneWay, Converter={StaticResource BoolToVisibility_Reverse}}">
                <ListView x:Name="Lyrics_ListView" ItemsSource="{x:Bind _viewModel.LyricItems}" GotFocus="Lyrics_ListView_GotFocus" LostFocus="Lyrics_ListView_LostFocus" SelectionChanged="Lyrics_ListView_SelectionChanged" Tapped="Lyrics_ListView_Tapped">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="MinHeight" Value="40"/>
                            <Setter Property="Margin" Value="0,2"/>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:Lyric">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="LyricTime_Button" x:Uid="/Tools/LyricTime_Button" Background="Transparent" BorderThickness="0" VerticalAlignment="Top" Padding="0" Margin="0, 0, 5, 0" Click="LyricTime_Button_Click">
                                    <TextBlock Text="{x:Bind Time, Mode=OneWay, Converter={StaticResource TimeSpanToLyricTimeString}}"/>
                                </Button>
                            
                                <TextBlock Grid.Column="1" Text="{x:Bind Content, Mode=OneWay}" TextWrapping="Wrap" Margin="5, 0, 0, 0"/>

                                <StackPanel Grid.Column="2" Orientation="Horizontal" Visibility="{x:Bind IsSelected, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                                    <Button x:Name="MoveTime_Button" x:Uid="/LyricsEdit/MoveTime_Button" Content="&#xE759;" Style="{StaticResource ControllerButtonStyle}" Click="MoveTime_Button_Click"/>
                                    <Button x:Name="RemoveLyrics_Button" x:Uid="/LyricsEdit/RemoveLyrics_Button" Content="&#xE10A;" Style="{StaticResource ControllerButtonStyle}" Click="RemoveLyrics_Button_Click"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Button x:Name="LyricsSort_Button" x:Uid="/LyricsEdit/LyricsSort_Button" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="50" Style="{StaticResource FloatingAction_ButtonStyle}" Click="LyricsSort_Button_Click">
                    <Button.Content>
                        <SymbolIcon Symbol="Sort"/>
                    </Button.Content>
                </Button>
            </Grid>

            <Grid x:Name="PreviewMode_Grid" Visibility="{x:Bind PreviewMode_ToggleButton.IsChecked, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                <Grid>
                    <ctol:LyricsMultilinePreview x:Name="MultilinePreview" ItemClick="MultilinePreview_ItemClick"/>

                    <Button x:Name="FontSizeInPreviewMode_Button" x:Uid="/LyricsPreviewSettings/FontSizeInPreviewMode_Button" Content="&#xE185;" VerticalAlignment="Top" Style="{StaticResource ControllerButtonStyle}" Margin="20">
                        <Button.Flyout>
                            <Flyout>
                                <Slider x:Name="FontSizeInPreviewMode_Slider" x:Uid="/LyricsPreviewSettings/FontSizeInPreviewMode_Slider" Width="100" Minimum="12" Maximum="24" Value="{x:Bind _settings.MultilinePreviewFontSize, Mode=TwoWay}"/>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                </Grid>

                <StackPanel x:Name="MiniMode_StackPanel" x:Uid="/Tools/MiniMode_StackPanel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="50">
                    <Button x:Name="EnterMiniMode_Button" Style="{StaticResource FloatingAction_ButtonStyle}" Visibility="{x:Bind _viewModel.IsMiniMode, Mode=OneWay, Converter={StaticResource BoolToVisibility_Reverse}}" Click="EnterMiniMode_Button_Click">
                        <Button.Content>
                            <SymbolIcon Symbol="Pin"/>
                        </Button.Content>
                    </Button>

                    <Button x:Name="ExitMiniMode_Button" Style="{StaticResource FloatingAction_ButtonStyle}" Visibility="{x:Bind _viewModel.IsMiniMode, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" Click="ExitMiniMode_Button_Click">
                        <Button.Content>
                            <SymbolIcon Symbol="UnPin"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
            
            <ToggleButton x:Name="PreviewMode_ToggleButton" x:Uid="/Tools/PreviewMode_ToggleButton" Content="&#xE18B;" Style="{StaticResource ControllerButtonStyle}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="20" IsEnabled="{x:Bind _viewModel.IsLyricsItemAny, Mode=OneWay}" Checked="PreviewMode_ToggleButton_Checked" Unchecked="PreviewMode_ToggleButton_Unchecked"/>
        </Grid>

        <Grid Grid.Row="3" Visibility="{x:Bind PreviewMode_ToggleButton.IsChecked, Mode=OneWay, Converter={StaticResource BoolToVisibility_Reverse}}" Tapped="LyricsPreview_Grid_Tapped">
            <Rectangle Fill="{ThemeResource SystemControlBackgroundAccentBrush}" Opacity="{x:Bind _settings.PreviewBackgroundOpacity, Mode=OneWay}"/>
            <ctol:LyrricsSinglePreview x:Name="SinglePreview" CaraOkEffectEnabled="{x:Bind _settings.CaraOkEffectEnabled, Mode=OneWay}" Lyrics="{x:Bind _viewModel.LyricItems}" FontSize="{x:Bind _settings.SinglePreviewFontSize, Mode=OneWay}">
                <ctol:LyrricsSinglePreview.Foreground>
                    <SolidColorBrush Color="{x:Bind _settings.CaraOkEffectColor, Mode=OneWay}"/>
                </ctol:LyrricsSinglePreview.Foreground>
            </ctol:LyrricsSinglePreview>
        </Grid>

        <ContentDialog x:Name="LyricsFileInfo_ContentDialog" x:Uid="/LyricsFileInfo/LyricsFileInfo_ContentDialog" Grid.Row="2" Opened="LyricsFileInfo_ContentDialog_Opened" Closed="LyricsFileInfo_ContentDialog_Closed">
            <StackPanel>
                <TextBox x:Uid="/LyricsFileInfo/Title_TextBox" Text="{x:Bind _viewModel.LyricsTags[0].TagValue, Mode=TwoWay}"/>
                <TextBox x:Uid="/LyricsFileInfo/Artist_TextBox" Text="{x:Bind _viewModel.LyricsTags[1].TagValue, Mode=TwoWay}"/>
                <TextBox x:Uid="/LyricsFileInfo/Album_TextBox" Text="{x:Bind _viewModel.LyricsTags[2].TagValue, Mode=TwoWay}"/>
                <TextBox x:Uid="/LyricsFileInfo/Author_TextBox" Text="{x:Bind _viewModel.LyricsTags[3].TagValue, Mode=TwoWay}"/>
            </StackPanel>
        </ContentDialog>

    </Grid>
</Page>
