<Page
    x:Class="SimpleLyricEditor.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleLyricEditor"
    xmlns:model="using:SimpleLyricEditor.Models"
    xmlns:vm="using:SimpleLyricEditor.ViewModels"
    xmlns:view="using:SimpleLyricEditor.Views"
    xmlns:ctol="using:SimpleLyricEditor.Views.UserControls"
    xmlns:temp="using:SimpleLyricEditor.Views.Template"
    xmlns:appinfo="using:HappyStudio.UwpToolsLibrary.Information"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" RequestedTheme="{x:Bind model.Settings.PageTheme,Mode=OneWay}">
    <SplitView x:Name="HidePanel_SplitView" PanePlacement="Right">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="min">
                <VisualState x:Name="mini">
                    <VisualState.Setters>
                        <Setter Target="LyricControllerButton_StackPanel.(Grid.Row)" Value="1"/>
                        <Setter Target="LyricControllerButton_StackPanel.(Grid.Column)" Value="0"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1"/>
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="big">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641"/>
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <SplitView.Pane>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer>
                    <Frame x:Name="HidePanel_Frame" SourcePageType="view:SettingsPage"/>
                </ScrollViewer>
                <StackPanel Grid.Row="1" Padding="10">
                    <TextBlock Text="简易歌词编辑器" FontSize="18" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Simple Lyric Editor" FontSize="18" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" HorizontalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5">
                        <TextBlock Text="版本 / Version："/>
                        <TextBlock Text="{x:Bind model.Version}"/>
                    </StackPanel>
                    <HyperlinkButton Content="Github" NavigateUri="https://github.com/kljzndx/Lyric-Editor/" HorizontalAlignment="Center" Margin="0,5"/>
                </StackPanel>
            </Grid>
        </SplitView.Pane>

        <SplitView.Content>
            <Grid x:Name="Main_Grid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" AllowDrop="True" DragOver="Main_Grid_DragOver" Drop="Main_Grid_Drop">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ctol:AudioPlayer x:Name="audioPlayer" Time="{x:Bind model.ThisTime,Mode=TwoWay}" MusicFileChanged="{x:Bind blurBackgroundImage.AudioPlayer_MusicFileChanged}"/>

                <ctol:BlurBackgroundImage x:Name="blurBackgroundImage" Grid.Row="1" Grid.RowSpan="2" Opacity="{x:Bind model.Settings.BackgroundOpacity,Mode=OneWay}" Visibility="{x:Bind model.Settings.IsDisplayBackground,Mode=OneWay,Converter={StaticResource BoolToVisibility}}"/>

                <Grid x:Name="LyricsEditor_Grid" Grid.Row="1"  Visibility="{x:Bind model.IsDisplayScrollLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility_Reverse}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="LyricsContent_TextBox" Text="{x:Bind model.LyricContent,Mode=TwoWay}" x:Uid="/LyricEdit/LyricContent_TextBox" MaxHeight="100" VerticalAlignment="Center" TextWrapping="Wrap" GotFocus="{x:Bind model.InputBoxGotFocus}" LostFocus="{x:Bind model.InputBoxLostFocus}" KeyDown="LyricsContent_TextBox_KeyDown"/>
                        <StackPanel x:Name="LyricControllerButton_StackPanel" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">

                            <Button x:Name="MultilineEditMode_Button" x:Uid="/LyricEdit/MultilineEditMode_Button" Content="&#xE762;" Style="{StaticResource ControllerButton}" Visibility="{x:Bind model.IsMultilineEditMode,Mode=OneWay,Converter={StaticResource BoolToVisibility_Reverse}}" Click="MultilineEditMode_Button_Click"/>
                            <Button x:Name="ExitMultilineEditMode_Button" x:Uid="/LyricEdit/ExitMultilineEditMode_Button" Content="&#xE10B;" Style="{StaticResource ControllerButton}" Visibility="{x:Bind model.IsMultilineEditMode,Mode=OneWay,Converter={StaticResource BoolToVisibility}}" Click="ExitMultilineEditMode_Button_Click"/>
                            <Button x:Name="SelectTools_Button" x:Uid="/LyricEdit/SelectTools_Button" Content="&#xE0A2;" Style="{StaticResource ControllerButton}" Visibility="{x:Bind model.IsMultilineEditMode,Mode=OneWay,Converter={StaticResource BoolToVisibility}}">
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem x:Name="Select_Reverse_MenuFlyoutItem" x:Uid="/LyricEdit/Select_Reverse_MenuFlyoutItem" Click="Select_Reverse_MenuFlyoutItem_Click"/>
                                        <MenuFlyoutItem x:Name="Select_BeforeItem_MenuFlyoutItem" x:Uid="/LyricEdit/Select_BeforeItem_MenuFlyoutItem" Click="Select_BeforeItem_MenuFlyoutItem_Click"/>
                                        <MenuFlyoutItem x:Name="Select_AfterItem_MenuFlyoutItem" x:Uid="/LyricEdit/Select_AfterItem_MenuFlyoutItem" Click="Select_AfterItem_MenuFlyoutItem_Click"/>
                                        <MenuFlyoutItem x:Name="Select_Paragraph_MenuFlyoutItem" x:Uid="/LyricEdit/Select_Paragraph_MenuFlyoutItem" Click="Select_Paragraph_MenuFlyoutItem_Click"/>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                            <Button x:Name="AddLyric_Button" x:Uid="/LyricEdit/AddLyric_Button" Content="&#xE109;" Style="{StaticResource ControllerButton}" Click="{x:Bind model.AddLyric}"/>
                            <Button x:Uid="/LyricEdit/CopyLyrics_Button" Content="&#xE8C8;" Style="{StaticResource ControllerButton}" Visibility="{x:Bind model.IsMultilineEditMode,Mode=OneWay,Converter={StaticResource BoolToVisibility}}" Click="{x:Bind model.CopyLyrics}"/>
                            <Button x:Name="DelLyric_Button" x:Uid="/LyricEdit/DelLyric_Button" Content="&#xE10A;" Style="{StaticResource ControllerButton}" Click="{x:Bind model.DelLyric}"/>
                            <Button x:Uid="/LyricEdit/ChangeLyric_Button" Content="&#xE104;" Style="{StaticResource ControllerButton}">
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem x:Uid="/LyricEdit/ChangeTime_MenuFlyoutItem" Click="{x:Bind model.ChangeTime}"/>
                                        <MenuFlyoutItem x:Uid="/LyricEdit/ChangeContent_MenuFlyoutItem" Click="{x:Bind model.ChangeContent}"/>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>

                        </StackPanel>
                    </Grid>

                    <ListView x:Name="Lyrics_ListView" Grid.Row="1" ItemsSource="{x:Bind model.Lyrics,Mode=OneWay}" IsItemClickEnabled="False" SelectedIndex="{x:Bind model.SelectedIndex,Mode=TwoWay}" SelectionChanged="Lyrics_ListView_SelectionChanged" GotFocus="Lyrics_ListView_GotFocus" LostFocus="Lyrics_ListView_LostFocus">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="vm:LyricItem">
                                <temp:LyricItemTemplate MinHeight="44" DoubleTapped="LyricItemTemplate_DoubleTapped" GotoThisTime_Click="LyricItemTemplate_GotoThisTime_Click"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Button x:Uid="/LyricEdit/LyricsSort_Button" Background="{ThemeResource SystemControlBackgroundAccentBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Grid.Row="1" Width="50" Height="50" Margin="0,0,50,50" Click="{x:Bind model.LyricsSort}">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid x:Name="RootGrid">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal">
                                                <Storyboard>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="White_Ellipse" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Black_Ellipse" Storyboard.TargetProperty="Opacity">
                                                        <LinearDoubleKeyFrame KeyTime="0" Value="0.4"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>

                                    <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}"/>
                                    <Ellipse x:Name="White_Ellipse" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="White" Opacity="0"/>
                                    <Ellipse x:Name="Black_Ellipse" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="Black" Opacity="0"/>
                                    <TextBlock Text="&#xE174;" FontFamily="Segoe MDL2 Assets" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Grid x:Name="FastMenu_Grid" Grid.Row="1" Width="145" Height="140" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Image Opacity="0.3" Source="Assets/毛玻璃.png" Stretch="UniformToFill"/>
                        <StackPanel Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Button x:Uid="/FastMenu/OpenMusicFile_Button" Width="130" Margin="0,5" Click="{x:Bind audioPlayer.OpenMusicFile}"/>
                            <Button x:Uid="/FastMenu/OpenLyricsFile_Button" Width="130" Margin="0,5" Click="{x:Bind model.OpenLyricFile}"/>
                            <Button x:Uid="/FastMenu/HideThisMenu_Button" Width="130" Margin="0,5" Click="{x:Bind HideFastMenu}"/>
                        </StackPanel>
                    </Grid>
                </Grid>

                <ContentDialog x:Name="LyricsFileInfo_ContentDialog" x:Uid="/LyricsFileInfoDialog/LyricsFileInfo_ContentDialog" Grid.RowSpan="3" VerticalAlignment="Center" Opened="LyricsFileInfo_ContentDialog_Opened" Closed="LyricsFileInfo_ContentDialog_Closed">
                    <StackPanel Margin="0,10">
                        <TextBox x:Uid="/LyricsFileInfoDialog/SongName_TextBox" Text="{x:Bind model.Tags.SongName,Mode=TwoWay}"/>
                        <TextBox x:Uid="/LyricsFileInfoDialog/Artist_TextBox" Text="{x:Bind model.Tags.Artist,Mode=TwoWay}"/>
                        <TextBox x:Uid="/LyricsFileInfoDialog/Album_TextBox" Text="{x:Bind model.Tags.Album,Mode=TwoWay}"/>
                        <TextBox x:Uid="/LyricsFileInfoDialog/LyricsAuthor_TextBox" Text="{x:Bind model.Tags.LyricsAuthor,Mode=TwoWay}"/>
                    </StackPanel>
                </ContentDialog>

                <Grid x:Name="LyricsPreview_Grid" Grid.Row="2" Visibility="{x:Bind model.Settings.IsDisplayLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Rectangle Grid.RowSpan="2" Fill="{ThemeResource SystemControlBackgroundAccentBrush}" Opacity="{x:Bind model.Settings.PreviewBackgroundOpacity,Mode=OneWay}"/>

                    <StackPanel>
                        <Button x:Name="Expand_Button" HorizontalAlignment="Stretch" Visibility="{x:Bind model.IsDisplayScrollLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility_Reverse}}" Click="Expand_Button_Click">
                            <FontIcon Glyph="&#xE010;"/>
                        </Button>

                        <Button x:Name="Fold_Button" HorizontalAlignment="Stretch" Visibility="{x:Bind model.IsDisplayScrollLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility}}" Click="Fold_Button_Click">
                            <FontIcon Glyph="&#xE011;"/>
                        </Button>
                    </StackPanel>

                    <ctol:SingleLyricPreview x:Name="singleLyricPreview" Grid.Row="1" Lyrics="{x:Bind model.Lyrics,Mode=OneWay}" Position="{x:Bind model.ThisTime,Mode=OneWay}" Visibility="{x:Bind model.IsDisplayScrollLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility_Reverse}}" Tapped="SingleLyricPreview_Tapped"/>
                    <ctol:MultipleLyricPreview x:Name="multipleLyricPreview" Grid.Row="1" LyricsList="{x:Bind model.Lyrics,Mode=OneWay}" Position="{x:Bind audioPlayer.Time,Mode=OneWay}" Visibility="{x:Bind model.IsDisplayScrollLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility}}"/>
                    
                    <StackPanel x:Name="MiniMode_StackPanel" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="20" Visibility="{x:Bind model.IsDisplayScrollLyricsPreview,Mode=OneWay,Converter={StaticResource BoolToVisibility}}">
                        <Button x:Name="MiniMode_Button" Padding="10" Click="MiniMode_Button_Click">
                            <SymbolIcon Symbol="Pin"/>
                        </Button>
                        <Button x:Name="ExitMiniMode_Button" Padding="10" Visibility="Collapsed" Click="ExitMiniMode_Button_Click">
                            <SymbolIcon Symbol="UnPin"/>
                        </Button>
                    </StackPanel>
                    
                </Grid>

                <ctol:ShortcutKeysDialog x:Name="shortcutKeysDialog" Grid.RowSpan="3"/>
                <ctol:UpdateLogDialog x:Name="updateLogDialog" Grid.RowSpan="3"/>
            </Grid>

        </SplitView.Content>
    </SplitView>
    <Page.BottomAppBar>
        <CommandBar Visibility="Visible">
            <CommandBar.PrimaryCommands>

                <AppBarButton x:Uid="/BottomBar/Open_AppBarButton" Icon="OpenFile">
                    <AppBarButton.Flyout>
                        <MenuFlyout Opened="MenuFlyout_Opened">
                            <MenuFlyoutItem x:Uid="/BottomBar/OpenMusicFile_MenuFlyoutItem" Click="{x:Bind audioPlayer.OpenMusicFile}"/>
                            <MenuFlyoutItem x:Uid="/BottomBar/OpenLyricsFile_MenuFlyoutItem" Click="{x:Bind model.OpenLyricFile}"/>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>

                <AppBarButton x:Uid="/BottomBar/Save_AppBarButton" Icon="Save" Click="{x:Bind model.SaveLyricFile}"/>

                <AppBarButton x:Uid="/BottomBar/SaveAs_AppBarButton" Click="{x:Bind model.SaveAsLyricFile}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE28F;"/>
                    </AppBarButton.Icon>
                </AppBarButton>

                <AppBarButton x:Uid="/BottomBar/LyricsFileInfo_AppBarButton" Click="{x:Bind LyricsFileInfo_ContentDialog.ShowAsync}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE700;"/>
                    </AppBarButton.Icon>
                </AppBarButton>

            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton x:Uid="/BottomBar/Settings_AppBarButton" Click="Settings_AppBarButton_Click"/>
                <AppBarButton x:Uid="/BottomBar/UpdateLog_AppBarButton" Click="{x:Bind updateLogDialog.Show}"/>
                <AppBarButton x:Uid="/BottomBar/ShortcutKeysList_AppBarButton" Click="{x:Bind shortcutKeysDialog.Show}"/>
                <AppBarButton x:Uid="/BottomBar/Feedback_AppBarButton">
                    <AppBarButton.Flyout>
                        <MenuFlyout Opened="MenuFlyout_Opened">
                            <MenuFlyoutItem x:Name="FeedbackInEmail_MenuFlyoutItem" x:Uid="/BottomBar/FeedbackInEmail_MenuFlyoutItem" Click="FeedbackInEmail_MenuFlyoutItem_Click"/>
                            <MenuFlyoutItem x:Name="FeedbackInSkype_MenuFlyoutItem" x:Uid="/BottomBar/FeedbackInSkype_MenuFlyoutItem" Click="FeedbackInSkype_MenuFlyoutItem_Click"/>
                            <MenuFlyoutItem x:Name="FeedbackInFeedbackHub_MenuFlyoutItem" x:Uid="/BottomBar/FeedbackInFeedbackHub_MenuFlyoutItem" Click="FeedbackInFeedbackHub_MenuFlyoutItem_Click"/>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
